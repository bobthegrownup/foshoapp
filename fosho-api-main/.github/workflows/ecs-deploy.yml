name: Deploy API To AWS Elastic Container Service

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

env:
  api-name: 'fosho-api'
  ecs-cluster: 'dev01'
  image-uri: '905418205232.dkr.ecr.us-east-1.amazonaws.com/fosho-api'
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.api-name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Enable Docker BuildKit
          export DOCKER_BUILDKIT=1
          # Build with cache from the latest image and use inline caching
          docker build --cache-from $ECR_REGISTRY/$ECR_REPOSITORY:latest --cache-to type=inline,mode=max -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # Push the built image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          # Optionally tag and push as latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest


      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.api-name }} --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.api-name }}
          image: ${{ env.image-uri }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.api-name }}
          cluster: ${{ env.ecs-cluster }}
          wait-for-service-stability: true